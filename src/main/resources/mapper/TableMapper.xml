<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.home.tblmgmt.mapper.TableMapper">

    <select id="getAllTables" resultType="TableInfo">
        WITH A AS (
            SELECT
                OBJ_DESCRIPTION(oid),
                relname
            FROM
                pg_class
            WHERE
                relkind = 'r' ),
        B AS (
            SELECT
                *
            FROM
                INFORMATION_SCHEMA.TABLES
            WHERE
                TABLE_SCHEMA = #{schema}),
        C AS (
            SELECT
                DISTINCT UPPER(B.table_name) tableName ,
                A.OBJ_DESCRIPTION logicalName
            FROM
                A
            JOIN B ON
                A.relname = B.table_name )
        SELECT
        --	ROW_NUMBER () OVER() AS ROW_NO,
            *
        FROM
            C
        WHERE
        	'' = COALESCE(#{search}, '')
        	OR C.tableName ILIKE '%' || TRIM(#{search}) || '%'
            OR C.logicalName ILIKE '%' || TRIM(#{search}) || '%'
        ORDER BY
            tableName; 
    </select>

    <select id="getTableDetails" resultType="ColumnInfo">
    select
        b.ordinal_position rowNo,
        b.column_name columnPhysicalName,
        lower(split_part(b.column_name, '_', 1)) || 
        regexp_replace(
            initcap(regexp_replace(b.column_name, '^[^_]+_', '')), -- remove first word and underscore
            '_',
            '',
            'g'
        ) columnLogicalName,
        TRIM(CASE                                                                                         
                        WHEN b.udt_name = 'varchar'                                                                   
                            THEN UPPER(b.udt_name) || '(' || b.character_maximum_length || ')'                        
                        WHEN b.udt_name IN ('text', 'timestamp')                                                      
                            THEN UPPER(b.udt_name)                                                                    
                        WHEN b.udt_name = 'numeric'                                                                   
                            THEN UPPER(b.udt_name) || '(' || b.numeric_precision || ',' || b.numeric_scale || ')'     
                        ELSE UPPER(b.udt_name)                                                                                       
                    END) dataType,
        CASE                                                                                              
            WHEN e.constraint_type = 'PRIMARY KEY' THEN TRUE                                               
            ELSE FALSE                                                                                      
            END isPrimaryKey, 
        CASE                                                                                                           
                WHEN b.udt_name = 'varchar' THEN 'string'                                                                  
            WHEN b.udt_name = 'numeric' THEN 'number'                                                                  
                ELSE b.udt_name                                                                                            
            END jsonType,
        '"'||lower(split_part(b.column_name, '_', 1)) || 
        regexp_replace(
            initcap(regexp_replace(b.column_name, '^[^_]+_', '')), -- remove first word and underscore
            '_',
            '',
            'g'
        )||'": '                            
            || CASE                                                                                                    
                WHEN b.udt_name ='varchar'                                                                             
                    THEN '""'                                                                                         
                WHEN b.udt_name = 'numeric' THEN '0'                                                                   
                    ELSE b.udt_name                                                                                        
            END || '' || ',' body_request,
        c.description 
    from
        pg_catalog.pg_statio_all_tables a
        join information_schema.columns b
            on a.schemaname = b.table_schema
            and a.relname = b.table_name
        left join information_schema.key_column_usage d                                                    
                        ON(b.table_schema = d.table_schema                                                             
                            and b.table_name  = d.table_name                                                           
                            and b.column_name = d.column_name)                                                         
        left join information_schema.table_constraints e                                                   
            ON (d.constraint_name = e.constraint_name                                                      
                and d.constraint_schema = e.constraint_schema                                              
                and d.constraint_name = e.constraint_name)
        left JOIN pg_catalog.pg_description c                                                             
                        on c.objoid = a.relid
                        and c.objsubid   = b.ordinal_position
    where
        a.schemaname = #{schema}
        and a.relname = LOWER(#{table})
    order by a.relname, b.ordinal_position;       
    </select>

    <update id="renameColumn">
        ALTER TABLE #{schema}.#{table} RENAME COLUMN #{oldName} TO #{newName};
    </update>

    <update id="removeColumn">
        ALTER TABLE #{schema}.#{table} DROP COLUMN #{column};
    </update>

    <update id="modifyColumnDataType">
        ALTER TABLE #{schema}.#{table} ALTER COLUMN #{column} TYPE #{dataType};
    </update>
</mapper>
